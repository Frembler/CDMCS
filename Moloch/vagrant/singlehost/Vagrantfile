$provision_script = <<SCRIPT

start=$(date)

cat >> /etc/sysctl.conf <<EOF
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
EOF
sysctl -p

echo 'Acquire::ForceIPv4 "true";' | sudo tee /etc/apt/apt.conf.d/99force-ipv4
export DEBIAN_FRONTEND=noninteractive

#set versions here
#MOLOCH="moloch-nightly_amd64.deb"
MOLOCH=moloch_0.18.0-1_amd64.deb
ELASTICSEARCH="elasticsearch-5.2.2.deb"
EVEBOX="evebox_0.6.1~dev20170326064726_amd64.deb"

cd /vagrant/

echo "$(date) installing java"
add-apt-repository ppa:webupd8team/java > /dev/null 2>&1
apt-get update > /dev/null 2>&1
echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections
apt-get -y install oracle-java8-installer > /dev/null 2>&1

echo "$(date) installing Elasticsearch"
[[ -f $ELASTICSEARCH ]] || wget  -q -4 https://artifacts.elastic.co/downloads/elasticsearch/$ELASTICSEARCH
dpkg -i $ELASTICSEARCH > /dev/null 2>&1
sed -i -e 's,-Xms2g,-Xms256m,g' /etc/elasticsearch/jvm.options
sed -i -e 's,-Xmx2g,-Xmx256m,g' /etc/elasticsearch/jvm.options
systemctl enable elasticsearch > /dev/null 2>&1
systemctl start elasticsearch

#suricata
echo "$(date) installing Suricata"
add-apt-repository ppa:oisf/suricata-stable > /dev/null 2>&1
apt-get update > /dev/null 2>&1
apt-get -y install suricata > /dev/null 2>&1
systemctl stop suricata

#ls /sys/class/net | grep -v lo
# see http://pevma.blogspot.com.ee/2015/05/suricata-multiple-interface.html
cat >> /etc/suricata/suricata.yaml <<EOF
af-packet:
  - interface: enp0s3
    cluster-id: 98
    cluster-type: cluster_flow
    defrag: yes
  - interface: enp0s8
    cluster-id: 97
    cluster-type: cluster_flow
    defrag: yes
default-rule-path: /etc/suricata/rules
# rule-files:
# - scirius.rules
sensor-name: moloch-singlehost
EOF
touch  /etc/suricata//threshold.config
#suricata -T -vvv
[[ $(suricata -T) ]] || exit -1
#Fixed some weird systemd/init.d daemon pid file creating behavior. PID file in /var/run/ should be readable by all.
#sed -i -e 's/$DAEMON $SURICATA_OPTIONS > \\/var\\/log\\/suricata\\/suricata-start.log  2>\\&1 \\&/$DAEMON $SURICATA_OPTIONS > \\/var\\/log\\/suricata\\/suricata-start.log 2>\\&1\\n       chmod 644 $PIDFILE > \\/dev\\/null 2>\\&1 || true/' /etc/init.d/suricata
systemctl daemon-reload
systemctl enable suricata > /dev/null 2>&1
systemctl start suricata

# evebox
echo "$(date) installing GeoLite2"
[[ -f 'GeoLite2-City.mmdb.gz' ]] || wget -q  -4 http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz
mkdir -p /usr/local/share/GeoIP
gunzip GeoLite2-City.mmdb.gz --stdout > /usr/local/share/GeoIP/GeoLite2-City.mmdb
echo "$(date) installing evebox"
[[ -f $EVEBOX ]] ||wget  -q -4 http://evebox.org/files/debian/pool/main/e/evebox/$EVEBOX -O $EVEBOX
dpkg -i $EVEBOX > /dev/null 2>&1
echo 'ELASTICSEARCH_INDEX="suricata"' >> /etc/default/evebox
cp /etc/default/evebox /etc/default/evebox-esimport
cat > /lib/systemd/system/evebox-esimport.service <<EOF
[Unit]
Description=EveBox-EsImport
[Service]
#ExecStart=/usr/bin/evebox esimport -e \\$ELASTICSEARCH_URL --index \\$ELASTICSEARCH_INDEX --end /var/log/suricata/eve.json
ExecStart=/usr/bin/evebox esimport -e http://localhost:9200 --end /var/log/suricata/eve.json
EnvironmentFile=-/etc/default/evebox-esimport
[Install]
WantedBy=multi-user.target
EOF

systemctl enable evebox-esimport > /dev/null 2>&1
systemctl start evebox-esimport

systemctl enable evebox > /dev/null 2>&1
systemctl start evebox

echo "$(date) installing moloch"
apt-get -y install libwww-perl libjson-perl > /dev/null 2>&1
[[ -f $MOLOCH ]] || wget  -q -4 http://files.molo.ch/builds/ubuntu-16.04/$MOLOCH
confcmd=$(dpkg -i $MOLOCH | tail -1 | rev | cut -f1 -d" " | rev)
echo "$confcmd"
echo -en "enp0s3;enp0s8;\nno\nhttp://localhost:9200\ns2spassword\n" | $confcmd
# set up wise server
sed -i -e 's,#wiseHost=127.0.0.1,wiseHost=127.0.0.1\nplugins=wise.so\nviewerPlugins=wise.js\nwiseTcpTupleLookups=true\nwiseUdpTupleLookups=true\n,g' /data/moloch/etc/config.ini
MOLOCH_INSTALL_DIR="/data/moloch"
sed -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochwise.systemd.service > /etc/systemd/system/molochwise.service
cp /data/moloch/wiseService/wiseService.ini.sample /data/moloch/etc/wise.ini
systemctl enable molochwise.service
systemctl start molochwise.service

until curl -sS 'http://127.0.0.1:9200/_cluster/health?wait_for_status=yellow&timeout=5s' > /dev/null 2>&1
do
  sleep 1
done
/data/moloch/db/db.pl http://localhost:9200 init
/data/moloch/bin/moloch_add_user.sh admin "Admin User" THEPASSWORD --admin
systemctl enable molochviewer.service
systemctl start molochviewer.service
ethtool -K enp0s3 tx off sg off gro off gso off lro off tso off
ethtool -K enp0s8 tx off sg off gro off gso off lro off tso off
systemctl start molochcapture.service

#create some traffic
sleep 1
curl  -s https://zeustracker.abuse.ch/blocklist.php?download=ipblocklist | while read i; do curl -s -m 2 $i > /dev/null; done &


echo "DONE :: start $start end $(date)"
netstat -ntple

SCRIPT

Vagrant.configure(2) do |config|
  config.vm.define 'moloch' do |box|
      box.vm.box = "ubuntu/xenial64"
      box.vm.hostname = 'moloch'
      box.vm.network :private_network, ip: "192.168.10.11"
      box.vm.provider :virtualbox do |vb|
       vb.customize ["modifyvm", :id, "--memory", "2048"]
       vb.customize ["modifyvm", :id, "--cpus", "2"]
      end
      config.vm.provision "shell", inline: $provision_script
  end
end
