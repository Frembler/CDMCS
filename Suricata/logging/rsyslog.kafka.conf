module(load="omkafka")
module(load="mmjsonparse")
module(load="mmnormalize")

template(name="syslog-struct-plaintext"
         type="list"
         option.json="on") {
           constant(value="{")
             constant(value="\"@timestamp\":\"")            property(name="timereported" dateFormat="rfc3339")
             constant(value="\",\"message\":\"")            property(name="msg")
             constant(value="\",\"host\":\"")               property(name="hostname")
             constant(value="\",\"severity\":\"")           property(name="syslogseverity-text")
             constant(value="\",\"facility\":\"")           property(name="syslogfacility-text")
             constant(value="\",\"syslogtag\":\"")          property(name="syslogtag")
             constant(value="\",\"program\":\"")            property(name="programname")
           constant(value="\"}\n")
         }
template(name="syslog-struct-json"
         type="list"
         option.json="on") {
           constant(value="{")
             constant(value="\"@timestamp\":\"")            property(name="timereported" dateFormat="rfc3339")
             constant(value="\",\"message\":\"")            property(name="msg")
             constant(value="\",\"host\":\"")               property(name="hostname")
             constant(value="\",\"severity\":\"")           property(name="syslogseverity-text")
             constant(value="\",\"facility\":\"")           property(name="syslogfacility-text")
             constant(value="\",\"syslogtag\":\"")          property(name="syslogtag")
             constant(value="\",\"program\":\"")            property(name="programname")
           constant(value="\"}")
         }

template(name="syslog-normalized" type="list") {
  constant(value="{\"@timestamp\":\"")                      property(name="timereported" dateFormat="rfc3339")
  constant(value="\",\"host\":\"")                      property(name="hostname" format="json")
  constant(value="\",\"program\":\"")                       property(name="programname" format="json")
  constant(value="\",")                                     property(name="$!all-json" position.from="3")
}

# use ts from suricata, not syslog
template(name="suricata" type="list") {
  constant(value="{\"@timestamp\":\"")                      property(name="$!timestamp")
  constant(value="\",\"host\":\"")                      property(name="hostname" format="json")
  constant(value="\",\"program\":\"")                       property(name="programname" format="json")
  constant(value="\",")                                     property(name="$!all-json" position.from="3")
}

template(name="debug-JSON-file" type="list") {
  property(name="$!all-json" format="json")
  constant(value="\n")
}


if $msg startswith '@cee: ' or $msg startswith ' @cee: ' then {
  action(type="mmjsonparse")

  if $syslogtag contains 'suricata' and $parsesuccess == "OK" then {
    if $!event_type == "stats" then {
      action(
        broker=["kafka-0.lab:9092","kafka-1.lab:9092","kafka-2.lab"]
        type="omkafka"
        topic="suricata-stats"
        partitions.auto="on"
        confParam="compression.codec=snappy" 
        template="suricata"
      )
    } else {
      action(
        broker=["kafka-0.lab:9092","kafka-1.lab:9092","kafka-2.lab"]
        type="omkafka"
        topic="suricata"
        partitions.auto="on"
        confParam="compression.codec=snappy" 
        template="suricata"
      )
    }
  } else {

    action(
      type="omfile"     
      dirCreateMode="0750"     
      FileCreateMode="0644"     
      File="/var/log/fail"     
      template="debug-JSON-file"   
    )
  }

}
